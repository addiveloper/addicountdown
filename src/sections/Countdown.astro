---
interface Props {
  search: string;
}

import DateComponent from "@/components/Date.astro";

const { search } = Astro.props;

const searchParams = new URLSearchParams(search);
const dateParams = searchParams.get("date");
const title = searchParams.get("title");

const date = new Date(dateParams as string).getTime();
---

<section class="flex flex-col justify-center items-center">
  <h1 class="text-center font-medium text-lg md:text-2xl mb-8">
    {title}
  </h1>
  <div class="flex flex-row gap-x-1" data-date={date}>
    <DateComponent time="00" dateType="DÃ­as" attribute={{ "data-days": "" }} />
    <span class="text-2xl md:text-5xl md:mt-5">:</span>
    <DateComponent
      time="00"
      dateType="Horas"
      attribute={{ "data-hours": "" }}
    />
    <span class="text-2xl md:text-5xl md:mt-5">:</span>
    <DateComponent
      time="00"
      dateType="Minutos"
      attribute={{ "data-minutes": "" }}
    />
    <span class="text-2xl md:text-5xl md:mt-5">:</span>
    <DateComponent
      time="00"
      dateType="Segundos"
      attribute={{ "data-seconds": "" }}
    />
  </div>
</section>

<script>
  const SECOND = 1000;
  const MINUTE = SECOND * 60;
  const HOUR = MINUTE * 60;
  const DAY = HOUR * 24;

  function init() {
    const $countdown = document.querySelector("[data-date]");
    if (!$countdown) return;

    const $days = $countdown.querySelector("[data-days]");
    const $hours = $countdown.querySelector("[data-hours]");
    const $minutes = $countdown.querySelector("[data-minutes]");
    const $seconds = $countdown.querySelector("[data-seconds]");

    const timestamp = $countdown.getAttribute("data-date");
    if (!timestamp) return;

    const date = new Date(+timestamp).getTime();

    const formatTime = (time: number) => {
      return Math.floor(time).toString().padStart(2, "0");
    };

    function updateCountdown() {
      const now = Date.now();
      const diff = date - now;

      if ($days instanceof HTMLElement) {
        $days.innerText = formatTime(diff / DAY);
      }

      if ($hours instanceof HTMLElement) {
        $hours.innerText = formatTime((diff % DAY) / HOUR);
      }

      if ($minutes instanceof HTMLElement) {
        $minutes.innerText = formatTime((diff % HOUR) / MINUTE);
      }

      if ($seconds instanceof HTMLElement) {
        $seconds.innerText = formatTime((diff % MINUTE) / SECOND);
      }
    }

    setInterval(updateCountdown, SECOND);
    updateCountdown();
  }

  init();
</script>
